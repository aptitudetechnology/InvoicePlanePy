{% extends "base.html" %}

{% block content %}
<div class="row">
    <div class="col-12">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2>Tax Rates</h2>
            <div>
                <button class="btn btn-primary me-2" id="addTaxRateBtn">
                    <i class="bi bi-plus"></i> Add Tax Rate
                </button>
                <a href="/settings" class="btn btn-secondary">
                    <i class="bi bi-arrow-left"></i> Back to Settings
                </a>
            </div>
        </div>

        <div class="card">
            <div class="card-body">
                <div class="alert alert-info">
                    <i class="bi bi-info-circle me-2"></i>
                    Configure tax rates that can be applied to invoice and quote line items.
                </div>

                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Tax Name</th>
                                <th>Rate (%)</th>
                                <th>Default</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="taxRatesTable">
                            </tbody>
                    </table>
                </div>

                <div class="mt-4">
                    <h6>Tax Rate Information</h6>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="bg-light p-3 rounded">
                                <strong>Default Tax Rate:</strong><br>
                                The default tax rate is automatically applied to new invoice and quote line items. Only one tax rate can be set as default.
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="bg-light p-3 rounded">
                                <strong>Tax Calculations:</strong><br>
                                Tax rates are applied to the line item total before any discounts. Multiple tax rates can be applied to a single line item.
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="taxRateModal" tabindex="-1" aria-labelledby="modalTitle" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalTitle">Add Tax Rate</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="taxRateForm">
                    <div class="mb-3">
                        <label for="taxName" class="form-label">Tax Name</label>
                        <input type="text" class="form-control" id="taxName" required>
                    </div>
                    <div class="mb-3">
                        <label for="taxRate" class="form-label">Rate (%)</label>
                        <input type="number" class="form-control" id="taxRate" step="0.01" min="0" max="100" required>
                    </div>
                    <div class="mb-3 form-check">
                        <input type="checkbox" class="form-check-input" id="isDefault">
                        <label class="form-check-label" for="isDefault">Set as Default</label>
                    </div>
                    <div class="mb-3">
                        <label for="status" class="form-label">Status</label>
                        <select class="form-select" id="status">
                            <option value="Active">Active</option>
                            <option value="Inactive">Inactive</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveTaxRateBtn">Save</button>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block scripts %}
<script>
    let taxRates = [
        { id: 1, name: 'VAT', rate: 20.00, isDefault: true, status: 'Active' },
        { id: 2, name: 'Sales Tax', rate: 8.25, isDefault: false, status: 'Active' },
        { id: 3, name: 'GST', rate: 10.00, isDefault: false, status: 'Inactive' }
    ];
    let editingId = null;
    let nextId = 4; // To ensure unique IDs for new tax rates

    // Get modal instance
    const taxRateModal = new bootstrap.Modal(document.getElementById('taxRateModal'));

    // Event Listeners
    document.addEventListener('DOMContentLoaded', renderTable);
    document.getElementById('addTaxRateBtn').addEventListener('click', addTaxRate);
    document.getElementById('saveTaxRateBtn').addEventListener('click', saveTaxRate);

    /**
     * Renders the tax rates table based on the current `taxRates` array.
     */
    function renderTable() {
        const tbody = document.getElementById('taxRatesTable');
        tbody.innerHTML = ''; // Clear existing rows

        if (taxRates.length === 0) {
            tbody.innerHTML = `<tr><td colspan="5" class="text-center py-4">No tax rates configured. Click "Add Tax Rate" to get started!</td></tr>`;
            return;
        }

        taxRates.forEach(taxRate => {
            const row = document.createElement('tr');
            row.setAttribute('data-id', taxRate.id);

            const defaultBadgeClass = taxRate.isDefault ? 'bg-success' : 'bg-secondary';
            const statusBadgeClass = taxRate.status === 'Active' ? 'bg-success' : 'bg-warning';

            row.innerHTML = `
                <td><strong>${taxRate.name}</strong></td>
                <td>${taxRate.rate.toFixed(2)}%</td>
                <td><span class="badge ${defaultBadgeClass}">${taxRate.isDefault ? 'Yes' : 'No'}</span></td>
                <td><span class="badge ${statusBadgeClass}">${taxRate.status}</span></td>
                <td>
                    <button class="btn btn-sm btn-outline-primary me-1" onclick="editTaxRate(${taxRate.id})">Edit</button>
                    <button class="btn btn-sm btn-outline-danger" onclick="deleteTaxRate(${taxRate.id})">Delete</button>
                </td>
            `;
            tbody.appendChild(row);
        });
    }

    /**
     * Prepares the modal for adding a new tax rate.
     */
    function addTaxRate() {
        editingId = null;
        document.getElementById('modalTitle').textContent = 'Add Tax Rate';
        document.getElementById('taxRateForm').reset(); // Clear form fields
        document.getElementById('isDefault').checked = false; // Ensure default is unchecked
        document.getElementById('status').value = 'Active'; // Set default status

        taxRateModal.show();
    }

    /**
     * Prepares the modal for editing an existing tax rate.
     * @param {number} id - The ID of the tax rate to edit.
     */
    function editTaxRate(id) {
        editingId = id;
        const taxRate = taxRates.find(tr => tr.id === id);
        if (taxRate) {
            document.getElementById('modalTitle').textContent = 'Edit Tax Rate';
            document.getElementById('taxName').value = taxRate.name;
            document.getElementById('taxRate').value = taxRate.rate;
            document.getElementById('isDefault').checked = taxRate.isDefault;
            document.getElementById('status').value = taxRate.status;
            taxRateModal.show();
        }
    }

    /**
     * Deletes a tax rate after confirmation.
     * @param {number} id - The ID of the tax rate to delete.
     */
    function deleteTaxRate(id) {
        const taxRateToDelete = taxRates.find(tr => tr.id === id);
        if (!taxRateToDelete) return;

        if (confirm(`Are you sure you want to delete the tax rate "${taxRateToDelete.name}"?`)) {
            taxRates = taxRates.filter(tr => tr.id !== id);
            // If the deleted rate was default, ensure no other rate is mistakenly default
            if (taxRateToDelete.isDefault && taxRates.length > 0) {
                 // Option: If there's only one rate left, make it default automatically
                 // Otherwise, prompt user to set a new default or just clear it.
                 // For simplicity, we won't auto-set a new default here.
            }
            renderTable();
        }
    }

    /**
     * Saves a new or edited tax rate. Handles form validation and default logic.
     */
    function saveTaxRate() {
        const name = document.getElementById('taxName').value.trim();
        const rate = parseFloat(document.getElementById('taxRate').value);
        const isDefault = document.getElementById('isDefault').checked;
        const status = document.getElementById('status').value;

        // Basic validation
        if (!name) {
            alert('Tax Name cannot be empty.');
            return;
        }
        if (isNaN(rate) || rate < 0 || rate > 100) {
            alert('Please enter a valid rate between 0 and 100.');
            return;
        }

        if (isDefault) {
            // If this rate is being set as default, ensure all others are not default
            taxRates.forEach(tr => tr.isDefault = false);
        } else {
            // If this rate is NOT default and there are no other default rates,
            // we should probably prevent saving unless it's the only rate
            // or warn the user. For now, we'll allow it.
            // A more robust system might require a default to always exist.
        }

        if (editingId) {
            // Edit existing tax rate
            const index = taxRates.findIndex(tr => tr.id === editingId);
            if (index !== -1) {
                taxRates[index] = { id: editingId, name, rate, isDefault, status };
            }
        } else {
            // Add new tax rate
            const newTaxRate = { id: nextId++, name, rate, isDefault, status };
            taxRates.push(newTaxRate);
        }

        renderTable();
        taxRateModal.hide(); // Hide the modal
    }
</script>
{% endblock %}